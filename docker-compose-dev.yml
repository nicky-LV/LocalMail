version: '3.3'

services:

  test_postgres:
    image: postgres
    ports:
      - "5432"

    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=test

  postgres:
    image: postgres
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
      - "5432"

    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=gS30z4KIulSQ

  frontend:
    build: ./frontend

    volumes:
      - ./frontend:/app

    command: bash -c "npm run dev"

    ports:
      - "3000:3000"

    environment:
      - NEXT_PUBLIC_API_SCHEME=http
      - NEXT_PUBLIC_API_DOMAIN=0.0.0.0
      - NEXT_PUBLIC_API_PORT=8000

  api:
    build: api
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./api:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONBUFFERED=nonemptystring
      - TEST_DB=1
      - DOMAIN=test
      - TLD=com
      - SECRET_KEY=CHANGEME
      - DB_HOST=postgres
      - TEST_DB_HOST=test_postgres
      - DB_PORT=5432
      - TEST_DB_PORT=5432
      - POSTGRES_USERNAME=postgres
      - TEST_POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=gS30z4KIulSQ
      - TEST_POSTGRES_PASSWORD=test

  smtp_server:
    build: smtp_server
    volumes:
      - ./smtp_server:/app

    command: bash -c "python -u main.py"
    environment:
      - DOMAIN=test
      - TLD=com
      - SMTP_HOST=0.0.0.0
      - SMTP_PORT=8025
      - TEST_DB=1
    depends_on:
      - postgres